{"version":3,"sources":["styles/style.js","pages/signup.js","pages/login.js","pages/home.js","pages/subforum.js","pages/createSubforum.js","App.js"],"names":["StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","input","padding","marginBottom","SignupPage","navigation","useState","firstname","setFirstname","lastname","setLastname","email","setEmail","username","setUsername","password","setPassword","View","style","styles","TextInput","placeholder","onChangeText","text","secureTextEntry","Button","title","onPress","bcrypt","require","salt","genSaltSync","hashedPW","hashSync","axios","post","headers","Pragma","then","console","log","navigate","catch","err","StatusBar","saved","LoginPage","res","data","compareSync","subforumID","subforumTitle","HomePage","subforums","setSubforums","map","subforum","TouchableOpacity","sub","Title","Divider","get","SubforumPage","posts","setPosts","subID","createSubforumPage","setTitle","description","setDescription","isPrivate","setSelection","CheckBox","value","onValueChange","checkbox","Text","Stack","createStackNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","name","component","options","headerTitleStyle","alignSelf"],"mappings":"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","file":"static/js/app.c3762029.chunk.js","sourcesContent":["\"use strict\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nexport default StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#87CEFA\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    padding: 15,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n","import * as React from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { TextInput, View, Button, Alert } from \"react-native\";\r\nimport styles from \"../styles/style\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function SignupPage({ navigation }) {\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const authenticate = () => {\r\n    // Hashing password\r\n    const bcrypt = require(\"bcryptjs\");\r\n    var salt = bcrypt.genSaltSync(10);\r\n    var hashedPW = bcrypt.hashSync(password, salt);\r\n\r\n    axios\r\n      .post(\"https://group-project-sql.herokuapp.com/signup\", {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        email: email,\r\n        username: username,\r\n        password: hashedPW,\r\n        headers: { Pragma: \"no-cache\", \"Cache-Control\": \"no-cache\" },\r\n      })\r\n      .then(() => {\r\n        console.log(\"Sign up successful\");\r\n        navigation.navigate(\"Home\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"First Name\"\r\n        onChangeText={(text) => setFirstname(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Last Name\"\r\n        onChangeText={(text) => setLastname(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        onChangeText={(text) => setEmail(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Username\"\r\n        onChangeText={(text) => setUsername(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry={true}\r\n        onChangeText={(text) => setPassword(text)}\r\n      />\r\n      <Button title=\"CREATE ACCOUNT\" onPress={authenticate} />\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { TextInput, View, Button } from \"react-native\";\r\nimport styles from \"../styles/style\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nvar saved = \"\";\r\n\r\nexport default function LoginPage({ navigation }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  var [password, setPassword] = useState(\"\");\r\n\r\n  const authenticate = () => {\r\n    const bcrypt = require(\"bcryptjs\");\r\n    \r\n    axios\r\n    .post(\"https://group-project-sql.herokuapp.com/fetch\", {\r\n      username: username,\r\n      headers: { Pragma: \"no-cache\", \"Cache-Control\": \"no-cache\" },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data[0]);\r\n      saved = (res.data[0][\"Password\"]);\r\n      console.log(saved);\r\n      if (bcrypt.compareSync(password, saved)){\r\n        navigation.navigate(\"Home\");\r\n      }else{\r\n        console.log(\"Password/Username is incorrect\")\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Username\"\r\n        onChangeText={(text) => setUsername(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry={true}\r\n        onChangeText={(text) => setPassword(text)}\r\n      />\r\n\r\n      <Button title=\"Log In\" onPress={authenticate} />\r\n      <Button title=\"Signup\" onPress={() => navigation.navigate(\"Signup\")} />\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { View, Button, TouchableOpacity } from \"react-native\";\r\nimport styles from \"../styles/style\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Card } from \"react-native-elements\";\r\n\r\nvar subforumID;\r\nvar subforumTitle;\r\n\r\nexport default function HomePage({ navigation }) {\r\n  const [subforums, setSubforums] = useState([]);\r\n\r\n  const showSubforums = () => {\r\n    axios\r\n      .get(\"https://group-project-sql.herokuapp.com/subforums\", {\r\n        headers: { Pragma: \"no-cache\", \"Cache-Control\": \"no-cache\" },\r\n      })\r\n      .then((res) => {\r\n        setSubforums(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  function subOnPress(sub) {\r\n    subforumTitle = sub[\"Sub_title\"];\r\n    subforumID = sub[\"Sub_ID\"];\r\n    console.log(subforumID);\r\n    console.log(subforumTitle);\r\n    navigation.navigate(\"Subforum\");\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {subforums.map((subforum) => (\r\n        <TouchableOpacity onPress={() => subOnPress(subforum)}>\r\n          <Card>\r\n            <Card.Title>{subforum[\"Sub_title\"]}</Card.Title>\r\n            <Card.Divider />\r\n            <Card.Title>{subforum[\"Sub_description\"]}</Card.Title>\r\n          </Card>\r\n        </TouchableOpacity>\r\n      ))}\r\n      <Button title=\"Log In\" onPress={showSubforums} />\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\nexport { subforumID };\r\n","import * as React from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { TextInput, View, Button } from \"react-native\";\r\nimport styles from \"../styles/style\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { Card } from \"react-native-elements\";\r\nimport { subforumID } from \"./home\";\r\n\r\nexport default function SubforumPage() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const showPosts = () => {\r\n    axios\r\n      .post(\"https://group-project-sql.herokuapp.com/posts\", {\r\n        subID: subforumID,\r\n        headers: { Pragma: \"no-cache\", \"Cache-Control\": \"no-cache\" },\r\n      })\r\n      .then((res) => {\r\n        // res.data should be all posts from specific subforum\r\n        setPosts(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {posts.map((post) => (\r\n        <Card>\r\n          <Card.Title>{post[\"Post_title\"]}</Card.Title>\r\n          <Card.Divider />\r\n          <Card.Title>{post[\"Post_content\"]}</Card.Title>\r\n          <Card.Divider />\r\n          <Card.Title>{post[\"Post_date\"]}</Card.Title>\r\n        </Card>\r\n      ))}\r\n      <Button title=\"Log In\" onPress={showPosts} />\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { Text, TextInput, View, Button, CheckBox } from \"react-native\";\r\nimport styles from \"../styles/style\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function createSubforumPage() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isPrivate, setSelection] = useState(false);\r\n\r\n  const executeCreate = () => {\r\n    axios\r\n      .post(\"https://group-project-sql.herokuapp.com/subforum/create\", {\r\n        title: title,\r\n        description: description,\r\n        isPrivate: isPrivate,\r\n        headers: { Pragma: \"no-cache\", \"Cache-Control\": \"no-cache\" },\r\n      })\r\n      .then(() => {\r\n        console.log(\"Submit post successful\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Title\"\r\n        onChangeText={(text) => setTitle(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Post description\"\r\n        onChangeText={(text) => setDescription(text)}\r\n      />\r\n      <CheckBox\r\n        value={isPrivate}\r\n        onValueChange={setSelection}\r\n        style={styles.checkbox}\r\n      />\r\n      <Text>Subforum Private: {isPrivate ? \"👍\" : \"👎\"}</Text>\r\n      <Button title=\"Create SubForum\" onPress={executeCreate} />\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport SignupPage from \"./pages/signup\";\r\nimport LoginPage from \"./pages/login\";\r\nimport HomePage from \"./pages/home\";\r\nimport SubforumPage from \"./pages/subforum\";\r\nimport createSubforumPage from \"./pages/createSubforum\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Home\">\r\n        <Stack.Screen\r\n          name=\"Login\"\r\n          component={LoginPage}\r\n          options={{\r\n            headerTitleStyle: { alignSelf: \"center\" },\r\n            title: \"login\",\r\n          }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Signup\"\r\n          component={SignupPage}\r\n          options={{\r\n            headerTitleStyle: { alignSelf: \"center\" },\r\n            title: \"Sign Up\",\r\n          }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={HomePage}\r\n          options={{\r\n            headerTitleStyle: { alignSelf: \"center\" },\r\n            title: \"Home\",\r\n          }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"CreateSubforum\"\r\n          component={createSubforumPage}\r\n          options={{\r\n            headerTitleStyle: { alignSelf: \"center\" },\r\n            title: \"Create a Subforum\",\r\n          }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Subforum\"\r\n          component={SubforumPage}\r\n          options={{\r\n            headerTitleStyle: { alignSelf: \"center\" },\r\n            title: \"Subforum\",\r\n          }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}